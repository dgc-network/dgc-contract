# Copyright (c) The dgc.network
# SPDX-License-Identifier: Apache-2.0

version: "2.1"

volumes:
  keys:

services:
  validator:
    image: hyperledger/sawtooth-validator
    container_name: validator
    volumes:
      - keys:/keys
    expose:
      - 4004
    entrypoint: "bash -c \"\
        sawadm keygen && \
        sawtooth keygen && \
        cp /etc/sawtooth/keys/* /keys/ && \
        sawset genesis  -k /etc/sawtooth/keys/validator.priv && \
        sawset proposal create \
          -k /etc/sawtooth/keys/validator.priv \
          sawtooth.swa.administrators=$$(cat /etc/sawtooth/keys/validator.pub) \
          sawtooth.consensus.algorithm.name=Devmode \
          sawtooth.consensus.algorithm.version=0.1 \
          -o config.batch && \
        sawadm genesis config-genesis.batch config.batch && \
        sawtooth-validator -vv \
          --endpoint tcp://validator:8800 \
          --bind component:tcp://eth0:4004 \
          --bind network:tcp://eth0:8800 \
          --bind consensus:tcp://eth0:5050 \
        \""

  rest-api:
    image: hyperledger/sawtooth-rest-api
    container_name: rest-api
    expose:
      - 8008
    ports:
      - "8008:8008"
    entrypoint: sawtooth-rest-api --connect tcp://validator:4004 --bind rest-api:8008 -vv

  shell:
    image: hyperledger/sawtooth-shell
    container_name: shell
    entrypoint: "bash -c \"\
        sawtooth keygen && \
        tail -f /dev/null \
        \""

  settings-tp:
    image: hyperledger/sawtooth-settings-tp
    container_name: settings-tp
    entrypoint: settings-tp -vv --connect tcp://validator:4004

  devmode-rust:
    image: hyperledger/sawtooth-devmode-engine-rust
    container_name: devmode-engine
    depends_on:
      - validator
    command: |
      devmode-engine-rust -v --connect tcp://validator:5050
    stop_signal: SIGKILL

  sabre-tp:
    image: hyperledger/sawtooth-sabre-tp
    container_name: sabre-tp
    entrypoint: sawtooth-sabre -vvv -C tcp://validator:4004

  sabre-cli:
    image: hyperledger/sawtooth-sabre-cli
    container_name: sabre-cli
    volumes:
      - keys:/keys
      - .:/project
    entrypoint: "bash -c \"\
      tail -f /dev/null \
      \""

  pike-api:
    image: pike-api
    container_name: pike-api
    volumes:
      - .:/project
    expose:
      - 9001
    ports:
      - 9001:9001
    entrypoint: "bash -c \"\
      cd /project/api && \
      cargo build && \
      tail -f /dev/null \
      \""
    build:
      context: api/
    environment:
      RUST_BACKTRACE: 1
      ROCKET_ADDRESS: "0.0.0.0"
      ROCKET_PORT: 9001
      VALIDATOR_URL: tcp://validator:9004
      DATABASE_URL: postgres://pike:pike@pike-db:5432/pike

  pike-swagger-ui:
    image: pike-swagger-ui
    container_name: pike-swagger-ui
    volumes:
      - .:/project
    expose:
      - 80
    ports:
      - 9002:80
    build:
      context: .
      dockerfile: api/Dockerfile-swagger-ui

  pike-db:
    image: pike-db
    container_name: pike-db
    volumes:
      - .:/project
    environment:
      POSTGRES_DB: pike
      POSTGRES_USER: pike
      POSTGRES_PASSWORD: pike
    ports:
      - 5432:5432
    build:
      context: db/

  pike-adminer:
    image: adminer
    container_name: pike-adminer
    links:
      - pike-db:db
    ports:
      - 9003:8080

  pike-client:
    image: pike-client
    container_name: pike-client
    entrypoint: "bash -c \"\
      cd /project/cli && \
      cargo build && \
      tail -f /dev/null \
      \""
    volumes:
      - .:/project
      - ./keys:/root/.sawtooth/keys
    build:
      context: cli

  pike-tp:
    image: pike-tp
    container_name: pike-tp
    entrypoint: "bash -c \"\
        cd /project/tp/ && \
        cargo build && \
        pike -vv -C tcp://validator:9004
        \""
    volumes:
      - .:/project
    build:
      context: tp

  pike-sde-service:
    image: pike-sde-service
    container_name: pike-sde-service
    environment:
      DATABASE_URL: postgres://pike:pike@pike-db:5432/pike
    entrypoint: "bash -c \"
      cd /project/state_delta_export && \
      cargo build && \
      pike-sde -vv -c tcp://validator:9004 \""
    volumes:
      - .:/project
    build:
      context: state_delta_export/
    depends_on:
      - validator
      - rest-api
      - pike-db
